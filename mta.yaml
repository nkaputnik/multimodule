_schema-version: '3.1'
ID: capire.multimodule
version: 1.0.0
description: "A simple CAP project."

parameters:
  enable-parallel-deployments: true
build-parameters:
  before-all:
    - builder: custom
      commands:
        - npx cds build ./database --production --ws --opts workspaceRoot=..
        - npx cds build ./books --production --ws --opts workspaceRoot=..
        - npx cds build ./customers --production --ws --opts workspaceRoot=..
        - npx cds build ./orders --production --ws --opts workspaceRoot=..

modules:
  - name: books-srv
    type: nodejs
    path: books/gen/srv
    parameters:
      buildpack: nodejs_buildpack
    build-parameters:
      builder: npm
    provides:
      - name: books-api # required by consumers of CAP services (e.g. approuter)
        properties:
          srv-url: ${default-url}
    requires:
      - name: books-auth

  - name: customers-srv
    type: nodejs
    path: customers/gen/srv
    parameters:
      buildpack: nodejs_buildpack
    build-parameters:
      builder: npm
    provides:
      - name: customers-api # required by consumers of CAP services (e.g. approuter)
        properties:
          srv-url: ${default-url}
    requires:
      - name: customers-auth

  - name: orders-srv
    type: nodejs
    path: orders/gen/srv
    parameters:
      buildpack: nodejs_buildpack
    build-parameters:
      builder: npm
    provides:
      - name: orders-api # required by consumers of CAP services (e.g. approuter)
        properties:
          srv-url: ${default-url}
    requires:
      - name: orders-auth

  - name: books-approuter
    type: approuter.nodejs
    path: books/app/
    parameters:
      keep-existing-routes: true
      disk-quota: 256M
      memory: 256M
    requires:
      - name: books-api
        group: destinations
        properties:
          name: books-api # must be used in xs-app.json as well
          url: ~{srv-url}
          forwardAuthToken: true
      - name: books-auth
    provides:
      - name: books-approuter-api
        properties:
          app-url: '${default-url}'

  - name: multimodule-mtx
    type: nodejs
    path: gen/mtx/sidecar
    build-parameters:
      builder: npm-ci
    parameters:
      memory: 256M
      disk-quota: 512M
    provides:
      - name: mtx-api
        properties:
          mtx-url: ${default-url}
    requires:
      - name: multimodule-auth
      - name: multimodule-registry
      - name: multimodule-db
      - name: orders-auth

resources:
  - name: database-auth
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json
      config:
        xsappname: database-${org}-${space}
        tenant-mode: dedicated
  - name: books-auth
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json
      config:
        xsappname: books-${org}-${space}
        tenant-mode: dedicated
  - name: customers-auth
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json
      config:
        xsappname: customers-${org}-${space}
        tenant-mode: dedicated
  - name: orders-auth
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json
      config:
        xsappname: orders-${org}-${space}
        tenant-mode: shared
  - name: multimodule-registry
    type: org.cloudfoundry.managed-service
    requires:
      - name: mtx-api
    parameters:
      service: saas-registry
      service-plan: application
      config:
        xsappname: multimodule-${org}-${space}
        appName: multimodule-${org}-${space}
        displayName: multimodule
        description: A simple CAP project.
        category: 'Category'
        appUrls:
          getDependencies: ~{mtx-api/mtx-url}/-/cds/saas-provisioning/dependencies
          onSubscription: ~{mtx-api/mtx-url}/-/cds/saas-provisioning/tenant/{tenantId}
          onSubscriptionAsync: true
          onUnSubscriptionAsync: true
          onUpdateDependenciesAsync: true
          callbackTimeoutMillis: 300000 # Increase if your deployments are taking longer than that
  - name: multimodule-db
    type: org.cloudfoundry.managed-service
    parameters:
      service: service-manager
      service-plan: container
